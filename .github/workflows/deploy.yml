name: CI/CD Deploy Java App to Tomcat10 on EC2

# Trigger deployment on push to master branch
on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1 Checkout your repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2 Setup Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # 3 Build WAR file
      - name: Build WAR file
        run: mvn clean package -DskipTests

      # 4 Verify WAR file exists
      - name: Verify WAR file
        run: |
          echo "=== Listing target directory ==="
          ls -la target/
          
          echo "=== Checking for WAR files ==="
          if ls target/*.war 1> /dev/null 2>&1; then
            echo "Found WAR files:"
            ls -la target/*.war
            WAR_FILE=$(ls target/*.war | head -1)
            echo "WAR file: $WAR_FILE"
            
            # Verify it's a file, not directory
            if [ -d "$WAR_FILE" ]; then
              echo "ERROR: $WAR_FILE is a directory, not a file!"
              exit 1
            fi
            
            # Copy to a known location with correct name
            cp "$WAR_FILE" ./ROOT.war
            echo "WAR_FILE copied to ./ROOT.war"
          else
            echo "ERROR: No WAR files found in target directory"
            exit 1
          fi

      # 5 Create SSH key file
      - name: Create SSH key file
        run: |
          # Create SSH key file
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # 6 Clean up EC2 and upload WAR file
      - name: Upload WAR to EC2
        run: |
          echo "=== Cleaning up EC2 ==="
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} \
            "sudo rm -rf /tmp/ROOT.war; sudo touch /tmp/ROOT.war; sudo chmod 666 /tmp/ROOT.war"
          
          echo "=== Uploading WAR file ==="
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ./ROOT.war ubuntu@${{ secrets.EC2_HOST }}:/tmp/ROOT.war

      # 7 Verify file was copied to EC2
      - name: Verify file copied to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "=== Checking /tmp directory ==="
            ls -la /tmp/
            
            echo "=== Verifying ROOT.war file ==="
            if [ -f "/tmp/ROOT.war" ]; then
              echo "Found ROOT.war file in /tmp:"
              ls -la /tmp/ROOT.war
              file /tmp/ROOT.war
              
              # Verify it's a regular file
              if [ ! -f "/tmp/ROOT.war" ]; then
                echo "ERROR: /tmp/ROOT.war is not a regular file!"
                exit 1
              fi
            else
              echo "ERROR: /tmp/ROOT.war not found!"
              echo "Contents of /tmp:"
              ls -la /tmp/
              exit 1
            fi

      # 8 Deploy WAR on Tomcat
      - name: Deploy WAR on Tomcat
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "=== Starting Deployment ==="
            
            echo "1. Cleaning up old deployment..."
            sudo rm -rf /var/lib/tomcat10/webapps/ROOT*
            
            echo "2. Verifying source WAR file exists..."
            if [ ! -f "/tmp/ROOT.war" ]; then
              echo "ERROR: /tmp/ROOT.war not found!"
              echo "Contents of /tmp:"
              ls -la /tmp/
              exit 1
            fi
            echo "WAR file details:"
            ls -lh /tmp/ROOT.war
            file /tmp/ROOT.war
            
            echo "3. Copying WAR to webapps directory..."
            sudo cp /tmp/ROOT.war /var/lib/tomcat10/webapps/
            
            echo "4. Setting permissions on WAR..."
            sudo chown tomcat:tomcat /var/lib/tomcat10/webapps/ROOT.war
            sudo chmod 644 /var/lib/tomcat10/webapps/ROOT.war
            
            echo "5. Waiting for Tomcat auto-deployment..."
            sleep 30
            
            echo "6. Verifying auto-deployment:"
            ls -la /var/lib/tomcat10/webapps/
            if [ -d "/var/lib/tomcat10/webapps/ROOT" ]; then
              echo "Exploded ROOT directory created successfully:"
              ls -la /var/lib/tomcat10/webapps/ROOT/
              sudo chown -R tomcat:tomcat /var/lib/tomcat10/webapps/ROOT/  # Fallback perm fix if needed
            else
              echo "WARNING: ROOT directory not found yet - check Tomcat logs"
            fi
            sudo systemctl status tomcat10 --no-pager
            
            echo "=== Deployment Completed Successfully ==="
